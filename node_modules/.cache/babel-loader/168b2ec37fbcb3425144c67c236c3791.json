{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\n\nvar _regeneratorRuntime = require(\"/Users/jacobcoles/Desktop/LT2216/final_project/final_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/jacobcoles/Desktop/LT2216/final_project/final_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleToken = void 0;\n\nconst fs = require(\"fs\");\n\nconst gaxios_1 = require(\"gaxios\");\n\nconst jws = require(\"jws\");\n\nconst path = require(\"path\");\n\nconst util_1 = require(\"util\");\n\nconst readFile = fs.readFile ? util_1.promisify(fs.readFile) : /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n\n      case 1:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _callee);\n}));\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\n\nclass ErrorWithCode extends Error {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n  }\n\n}\n\nlet getPem;\n\nclass GoogleToken {\n  /**\n   * Create a GoogleToken.\n   *\n   * @param options  Configuration object.\n   */\n  constructor(options) {\n    this.configure(options);\n  }\n\n  get accessToken() {\n    return this.rawToken ? this.rawToken.access_token : undefined;\n  }\n\n  get idToken() {\n    return this.rawToken ? this.rawToken.id_token : undefined;\n  }\n\n  get tokenType() {\n    return this.rawToken ? this.rawToken.token_type : undefined;\n  }\n\n  get refreshToken() {\n    return this.rawToken ? this.rawToken.refresh_token : undefined;\n  }\n  /**\n   * Returns whether the token has expired.\n   *\n   * @return true if the token has expired, false otherwise.\n   */\n\n\n  hasExpired() {\n    const now = new Date().getTime();\n\n    if (this.rawToken && this.expiresAt) {\n      return now >= this.expiresAt;\n    } else {\n      return true;\n    }\n  }\n  /**\n   * Returns whether the token will expire within eagerRefreshThresholdMillis\n   *\n   * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n   */\n\n\n  isTokenExpiring() {\n    var _a;\n\n    const now = new Date().getTime();\n    const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n\n    if (this.rawToken && this.expiresAt) {\n      return this.expiresAt <= now + eagerRefreshThresholdMillis;\n    } else {\n      return true;\n    }\n  }\n\n  getToken(callback, opts = {}) {\n    if (typeof callback === 'object') {\n      opts = callback;\n      callback = undefined;\n    }\n\n    opts = Object.assign({\n      forceRefresh: false\n    }, opts);\n\n    if (callback) {\n      const cb = callback;\n      this.getTokenAsync(opts).then(t => cb(null, t), callback);\n      return;\n    }\n\n    return this.getTokenAsync(opts);\n  }\n  /**\n   * Given a keyFile, extract the key and client email if available\n   * @param keyFile Path to a json, pem, or p12 file that contains the key.\n   * @returns an object with privateKey and clientEmail properties\n   */\n\n\n  getCredentials(keyFile) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var ext, key, body, privateKey, clientEmail;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            ext = path.extname(keyFile);\n            _context2.t0 = ext;\n            _context2.next = _context2.t0 === '.json' ? 4 : _context2.t0 === '.der' ? 13 : _context2.t0 === '.crt' ? 13 : _context2.t0 === '.pem' ? 13 : _context2.t0 === '.p12' ? 17 : _context2.t0 === '.pfx' ? 17 : 25;\n            break;\n\n          case 4:\n            _context2.next = 6;\n            return readFile(keyFile, 'utf8');\n\n          case 6:\n            key = _context2.sent;\n            body = JSON.parse(key);\n            privateKey = body.private_key;\n            clientEmail = body.client_email;\n\n            if (!(!privateKey || !clientEmail)) {\n              _context2.next = 12;\n              break;\n            }\n\n            throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n\n          case 12:\n            return _context2.abrupt(\"return\", {\n              privateKey,\n              clientEmail\n            });\n\n          case 13:\n            _context2.next = 15;\n            return readFile(keyFile, 'utf8');\n\n          case 15:\n            privateKey = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              privateKey\n            });\n\n          case 17:\n            if (getPem) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 20;\n            return Promise.resolve().then(() => require('google-p12-pem'));\n\n          case 20:\n            getPem = _context2.sent.getPem;\n\n          case 21:\n            _context2.next = 23;\n            return getPem(keyFile);\n\n          case 23:\n            privateKey = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              privateKey\n            });\n\n          case 25:\n            throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' + 'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n\n  getTokenAsync(opts) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(_this.inFlightRequest && !opts.forceRefresh)) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", _this.inFlightRequest);\n\n          case 2:\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _this.inFlightRequest = _this.getTokenAsyncInner(opts);\n\n          case 5:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 6:\n            _context3.prev = 6;\n            _this.inFlightRequest = undefined;\n            return _context3.finish(6);\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[2,, 6, 9]]);\n    }))();\n  }\n\n  getTokenAsyncInner(opts) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var creds;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(_this2.isTokenExpiring() === false && opts.forceRefresh === false)) {\n              _context4.next = 2;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", Promise.resolve(_this2.rawToken));\n\n          case 2:\n            if (!(!_this2.key && !_this2.keyFile)) {\n              _context4.next = 4;\n              break;\n            }\n\n            throw new Error('No key or keyFile set.');\n\n          case 4:\n            if (!(!_this2.key && _this2.keyFile)) {\n              _context4.next = 11;\n              break;\n            }\n\n            _context4.next = 7;\n            return _this2.getCredentials(_this2.keyFile);\n\n          case 7:\n            creds = _context4.sent;\n            _this2.key = creds.privateKey;\n            _this2.iss = creds.clientEmail || _this2.iss;\n\n            if (!creds.clientEmail) {\n              _this2.ensureEmail();\n            }\n\n          case 11:\n            return _context4.abrupt(\"return\", _this2.requestToken());\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }))();\n  }\n\n  ensureEmail() {\n    if (!this.iss) {\n      throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n    }\n  }\n\n  revokeToken(callback) {\n    if (callback) {\n      this.revokeTokenAsync().then(() => callback(), callback);\n      return;\n    }\n\n    return this.revokeTokenAsync();\n  }\n\n  revokeTokenAsync() {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (_this3.accessToken) {\n              _context5.next = 2;\n              break;\n            }\n\n            throw new Error('No token to revoke.');\n\n          case 2:\n            url = GOOGLE_REVOKE_TOKEN_URL + _this3.accessToken;\n            _context5.next = 5;\n            return gaxios_1.request({\n              url\n            });\n\n          case 5:\n            _this3.configure({\n              email: _this3.iss,\n              sub: _this3.sub,\n              key: _this3.key,\n              keyFile: _this3.keyFile,\n              scope: _this3.scope,\n              additionalClaims: _this3.additionalClaims\n            });\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }))();\n  }\n  /**\n   * Configure the GoogleToken for re-use.\n   * @param  {object} options Configuration object.\n   */\n\n\n  configure(options = {}) {\n    this.keyFile = options.keyFile;\n    this.key = options.key;\n    this.rawToken = undefined;\n    this.iss = options.email || options.iss;\n    this.sub = options.sub;\n    this.additionalClaims = options.additionalClaims;\n\n    if (typeof options.scope === 'object') {\n      this.scope = options.scope.join(' ');\n    } else {\n      this.scope = options.scope;\n    }\n\n    this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n  }\n  /**\n   * Request the token from Google.\n   */\n\n\n  requestToken() {\n    var _this4 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var iat, additionalClaims, payload, signedJWT, r, body, desc;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            iat = Math.floor(new Date().getTime() / 1000);\n            additionalClaims = _this4.additionalClaims || {};\n            payload = Object.assign({\n              iss: _this4.iss,\n              scope: _this4.scope,\n              aud: GOOGLE_TOKEN_URL,\n              exp: iat + 3600,\n              iat,\n              sub: _this4.sub\n            }, additionalClaims);\n            signedJWT = jws.sign({\n              header: {\n                alg: 'RS256'\n              },\n              payload,\n              secret: _this4.key\n            });\n            _context6.prev = 4;\n            _context6.next = 7;\n            return gaxios_1.request({\n              method: 'POST',\n              url: GOOGLE_TOKEN_URL,\n              data: {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: signedJWT\n              },\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              responseType: 'json'\n            });\n\n          case 7:\n            r = _context6.sent;\n            _this4.rawToken = r.data;\n            _this4.expiresAt = r.data.expires_in === null || r.data.expires_in === undefined ? undefined : (iat + r.data.expires_in) * 1000;\n            return _context6.abrupt(\"return\", _this4.rawToken);\n\n          case 13:\n            _context6.prev = 13;\n            _context6.t0 = _context6[\"catch\"](4);\n            _this4.rawToken = undefined;\n            _this4.tokenExpires = undefined;\n            body = _context6.t0.response && _context6.t0.response.data ? _context6.t0.response.data : {};\n\n            if (body.error) {\n              desc = body.error_description ? \": \".concat(body.error_description) : '';\n              _context6.t0.message = \"\".concat(body.error).concat(desc);\n            }\n\n            throw _context6.t0;\n\n          case 20:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[4, 13]]);\n    }))();\n  }\n\n}\n\nexports.GoogleToken = GoogleToken;","map":{"version":3,"sources":["/Users/jacobcoles/Desktop/LT2216/final_project/final_project/node_modules/gtoken/build/src/index.js"],"names":["Object","defineProperty","exports","value","GoogleToken","fs","require","gaxios_1","jws","path","util_1","readFile","promisify","ErrorWithCode","GOOGLE_TOKEN_URL","GOOGLE_REVOKE_TOKEN_URL","Error","constructor","message","code","getPem","options","configure","accessToken","rawToken","access_token","undefined","idToken","id_token","tokenType","token_type","refreshToken","refresh_token","hasExpired","now","Date","getTime","expiresAt","isTokenExpiring","_a","eagerRefreshThresholdMillis","getToken","callback","opts","assign","forceRefresh","cb","getTokenAsync","then","t","getCredentials","keyFile","ext","extname","key","body","JSON","parse","privateKey","private_key","clientEmail","client_email","Promise","resolve","inFlightRequest","getTokenAsyncInner","creds","iss","ensureEmail","requestToken","revokeToken","revokeTokenAsync","url","request","email","sub","scope","additionalClaims","join","iat","Math","floor","payload","aud","exp","signedJWT","sign","header","alg","secret","method","data","grant_type","assertion","headers","responseType","r","expires_in","tokenExpires","response","error","desc","error_description"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GoogleToken = void 0;\nconst fs = require(\"fs\");\nconst gaxios_1 = require(\"gaxios\");\nconst jws = require(\"jws\");\nconst path = require(\"path\");\nconst util_1 = require(\"util\");\nconst readFile = fs.readFile\n    ? util_1.promisify(fs.readFile)\n    : async () => {\n        // if running in the web-browser, fs.readFile may not have been shimmed.\n        throw new ErrorWithCode('use key rather than keyFile.', 'MISSING_CREDENTIALS');\n    };\nconst GOOGLE_TOKEN_URL = 'https://www.googleapis.com/oauth2/v4/token';\nconst GOOGLE_REVOKE_TOKEN_URL = 'https://accounts.google.com/o/oauth2/revoke?token=';\nclass ErrorWithCode extends Error {\n    constructor(message, code) {\n        super(message);\n        this.code = code;\n    }\n}\nlet getPem;\nclass GoogleToken {\n    /**\n     * Create a GoogleToken.\n     *\n     * @param options  Configuration object.\n     */\n    constructor(options) {\n        this.configure(options);\n    }\n    get accessToken() {\n        return this.rawToken ? this.rawToken.access_token : undefined;\n    }\n    get idToken() {\n        return this.rawToken ? this.rawToken.id_token : undefined;\n    }\n    get tokenType() {\n        return this.rawToken ? this.rawToken.token_type : undefined;\n    }\n    get refreshToken() {\n        return this.rawToken ? this.rawToken.refresh_token : undefined;\n    }\n    /**\n     * Returns whether the token has expired.\n     *\n     * @return true if the token has expired, false otherwise.\n     */\n    hasExpired() {\n        const now = new Date().getTime();\n        if (this.rawToken && this.expiresAt) {\n            return now >= this.expiresAt;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * Returns whether the token will expire within eagerRefreshThresholdMillis\n     *\n     * @return true if the token will be expired within eagerRefreshThresholdMillis, false otherwise.\n     */\n    isTokenExpiring() {\n        var _a;\n        const now = new Date().getTime();\n        const eagerRefreshThresholdMillis = (_a = this.eagerRefreshThresholdMillis) !== null && _a !== void 0 ? _a : 0;\n        if (this.rawToken && this.expiresAt) {\n            return this.expiresAt <= now + eagerRefreshThresholdMillis;\n        }\n        else {\n            return true;\n        }\n    }\n    getToken(callback, opts = {}) {\n        if (typeof callback === 'object') {\n            opts = callback;\n            callback = undefined;\n        }\n        opts = Object.assign({\n            forceRefresh: false,\n        }, opts);\n        if (callback) {\n            const cb = callback;\n            this.getTokenAsync(opts).then(t => cb(null, t), callback);\n            return;\n        }\n        return this.getTokenAsync(opts);\n    }\n    /**\n     * Given a keyFile, extract the key and client email if available\n     * @param keyFile Path to a json, pem, or p12 file that contains the key.\n     * @returns an object with privateKey and clientEmail properties\n     */\n    async getCredentials(keyFile) {\n        const ext = path.extname(keyFile);\n        switch (ext) {\n            case '.json': {\n                const key = await readFile(keyFile, 'utf8');\n                const body = JSON.parse(key);\n                const privateKey = body.private_key;\n                const clientEmail = body.client_email;\n                if (!privateKey || !clientEmail) {\n                    throw new ErrorWithCode('private_key and client_email are required.', 'MISSING_CREDENTIALS');\n                }\n                return { privateKey, clientEmail };\n            }\n            case '.der':\n            case '.crt':\n            case '.pem': {\n                const privateKey = await readFile(keyFile, 'utf8');\n                return { privateKey };\n            }\n            case '.p12':\n            case '.pfx': {\n                // NOTE:  The loading of `google-p12-pem` is deferred for performance\n                // reasons.  The `node-forge` npm module in `google-p12-pem` adds a fair\n                // bit time to overall module loading, and is likely not frequently\n                // used.  In a future release, p12 support will be entirely removed.\n                if (!getPem) {\n                    getPem = (await Promise.resolve().then(() => require('google-p12-pem'))).getPem;\n                }\n                const privateKey = await getPem(keyFile);\n                return { privateKey };\n            }\n            default:\n                throw new ErrorWithCode('Unknown certificate type. Type is determined based on file extension. ' +\n                    'Current supported extensions are *.json, *.pem, and *.p12.', 'UNKNOWN_CERTIFICATE_TYPE');\n        }\n    }\n    async getTokenAsync(opts) {\n        if (this.inFlightRequest && !opts.forceRefresh) {\n            return this.inFlightRequest;\n        }\n        try {\n            return await (this.inFlightRequest = this.getTokenAsyncInner(opts));\n        }\n        finally {\n            this.inFlightRequest = undefined;\n        }\n    }\n    async getTokenAsyncInner(opts) {\n        if (this.isTokenExpiring() === false && opts.forceRefresh === false) {\n            return Promise.resolve(this.rawToken);\n        }\n        if (!this.key && !this.keyFile) {\n            throw new Error('No key or keyFile set.');\n        }\n        if (!this.key && this.keyFile) {\n            const creds = await this.getCredentials(this.keyFile);\n            this.key = creds.privateKey;\n            this.iss = creds.clientEmail || this.iss;\n            if (!creds.clientEmail) {\n                this.ensureEmail();\n            }\n        }\n        return this.requestToken();\n    }\n    ensureEmail() {\n        if (!this.iss) {\n            throw new ErrorWithCode('email is required.', 'MISSING_CREDENTIALS');\n        }\n    }\n    revokeToken(callback) {\n        if (callback) {\n            this.revokeTokenAsync().then(() => callback(), callback);\n            return;\n        }\n        return this.revokeTokenAsync();\n    }\n    async revokeTokenAsync() {\n        if (!this.accessToken) {\n            throw new Error('No token to revoke.');\n        }\n        const url = GOOGLE_REVOKE_TOKEN_URL + this.accessToken;\n        await gaxios_1.request({ url });\n        this.configure({\n            email: this.iss,\n            sub: this.sub,\n            key: this.key,\n            keyFile: this.keyFile,\n            scope: this.scope,\n            additionalClaims: this.additionalClaims,\n        });\n    }\n    /**\n     * Configure the GoogleToken for re-use.\n     * @param  {object} options Configuration object.\n     */\n    configure(options = {}) {\n        this.keyFile = options.keyFile;\n        this.key = options.key;\n        this.rawToken = undefined;\n        this.iss = options.email || options.iss;\n        this.sub = options.sub;\n        this.additionalClaims = options.additionalClaims;\n        if (typeof options.scope === 'object') {\n            this.scope = options.scope.join(' ');\n        }\n        else {\n            this.scope = options.scope;\n        }\n        this.eagerRefreshThresholdMillis = options.eagerRefreshThresholdMillis;\n    }\n    /**\n     * Request the token from Google.\n     */\n    async requestToken() {\n        const iat = Math.floor(new Date().getTime() / 1000);\n        const additionalClaims = this.additionalClaims || {};\n        const payload = Object.assign({\n            iss: this.iss,\n            scope: this.scope,\n            aud: GOOGLE_TOKEN_URL,\n            exp: iat + 3600,\n            iat,\n            sub: this.sub,\n        }, additionalClaims);\n        const signedJWT = jws.sign({\n            header: { alg: 'RS256' },\n            payload,\n            secret: this.key,\n        });\n        try {\n            const r = await gaxios_1.request({\n                method: 'POST',\n                url: GOOGLE_TOKEN_URL,\n                data: {\n                    grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                    assertion: signedJWT,\n                },\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                responseType: 'json',\n            });\n            this.rawToken = r.data;\n            this.expiresAt =\n                r.data.expires_in === null || r.data.expires_in === undefined\n                    ? undefined\n                    : (iat + r.data.expires_in) * 1000;\n            return this.rawToken;\n        }\n        catch (e) {\n            this.rawToken = undefined;\n            this.tokenExpires = undefined;\n            const body = e.response && e.response.data ? e.response.data : {};\n            if (body.error) {\n                const desc = body.error_description\n                    ? `: ${body.error_description}`\n                    : '';\n                e.message = `${body.error}${desc}`;\n            }\n            throw e;\n        }\n    }\n}\nexports.GoogleToken = GoogleToken;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}