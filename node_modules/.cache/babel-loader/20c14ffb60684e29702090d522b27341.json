{"ast":null,"code":"import{send,assign}from\"xstate\";function say(text){return send(_context=>({type:\"SPEAK\",value:text}));}function listen(){return send('LISTEN');}const grammar={\"John\":{person:\"John Appleseed\"},\"Sarah\":{person:\"Sarah Swiggity\"},\"daddy\":{person:\"The big lad\"},\"on monday\":{day:\"Friday\"},\"on tuesday\":{day:\"Thursday\"},\"on wednesday\":{day:\"Friday\"},\"on thursday\":{day:\"Thursday\"},\"on friday\":{day:\"Friday\"},\"on saturday\":{day:\"Thursday\"},\"on sunday\":{day:\"Friday\"},\"at 8\":{time:\"8:00\"},\"at 9\":{time:\"9:00\"},\"at 10\":{time:\"10:00\"},\"at 11\":{time:\"11:00\"},\"at 12\":{time:\"12:00\"},\"at 13\":{time:\"13:00\"},\"at 14\":{time:\"14:00\"},\"at 15\":{time:\"15:00\"},\"at 16\":{time:\"16:00\"},\"yes\":{bool_val:true},\"yeah\":{bool_val:true},\"ok\":{bool_val:true},\"sure\":{bool_val:true},\"ja\":{bool_val:true},\"no\":{bool_val:false},\"nope\":{bool_val:false},\"nein\":{bool_val:false},\"nej\":{bool_val:false},\"appointment\":{initial_function:\"appt\"},\"an appointment\":{initial_function:\"appt\"},\"set up an appointment\":{initial_function:\"appt\"},\"make an appointment\":{initial_function:\"appt\"},\"to do\":{initial_function:\"todo\"},\"set up a to do\":{initial_function:\"todo\"},\"make to do\":{initial_function:\"todo\"},\"make a to do\":{initial_function:\"todo\"},\"timer\":{initial_function:\"timer\"},\"make a timer\":{initial_function:\"timer\"},\"set a timer\":{initial_function:\"timer\"},\"set timer\":{initial_function:\"timer\"}};const proxyurl=\"https://cors-anywhere.herokuapp.com/\";const rasaurl='https://rasajacobcoles.herokuapp.com/model/parse';const nluRequest=myQuery=>fetch(new Request(proxyurl+rasaurl,{method:'POST',headers:{'Origin':'http://localhost:3000/'},// only required with proxy\nbody:\"{\\\"text\\\": \\\"\".concat(myQuery,\"\\\"}\")})).then(data=>data.json());export const dmMachine={initial:'init',states:{init:{on:{CLICK:'welcome'}},welcome:{initial:\"prompt\",id:\"welcome\",on:{RECOGNISED:{target:\"query\",actions:assign(context=>{return{query:context.recResult};})}},states:{prompt:{entry:say(\"Would you like to book an appointment, set a timer or add a to do item?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()}}},query:{invoke:{id:\"rasaquery\",src:(context,event)=>nluRequest(context.query),onDone:[{target:\".prompt\",cond:(context,event)=>{return event.data.intent.confidence<0.7;}},{target:\"select_task\",actions:[assign((context,event)=>{return{snippet:event.data.intent.name};}),(context,event)=>console.log(event.data)]}],onError:{target:'init',actions:[(context,event)=>console.log(event.data),say(\"Sorry, there was an error. \")]}},states:{prompt:{entry:say(\"Sorry, I didn't get that\"),on:{ENDSPEECH:\"#welcome\"}}}},select_task:{initial:\"select\",states:{select:{always:[{cond:context=>context.snippet===\"Appointment\",target:\"#who\"},{cond:context=>context.snippet===\"TODO\",target:\"#todo\"},{cond:context=>context.snippet===\"Timer\",target:\"#timer\"},{target:\"prompt\"}]},prompt:{entry:say(\"Sorry, that isn't a valid answer\"),on:{ENDSPEECH:\"#welcome\"}}}},todo:{id:\"todo\",initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"You are in the to do thing.\")}}},timer:{id:\"timer\",initial:\"prompt\",on:{ENDSPEECH:\"init\"},states:{prompt:{entry:say(\"You are in the timer thing.\")}}},who:{id:\"who\",initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"person\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{person:grammar[context.recResult].person};}),target:\"day\"},{target:\".nomatch\"}]},states:{prompt:{entry:say(\"Who are you meeting with?\"),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Sorry I don't know them\"),on:{ENDSPEECH:\"prompt\"}}}},day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"day\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{day:grammar[context.recResult].day};}),target:\"whole_day_query\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"OK. \".concat(context.person,\". On which day is your meeting?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Can you please repeat that\"),on:{ENDSPEECH:\"ask\"}}}},whole_day_query:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"bool_val\"in(grammar[context.recResult]||{})&&grammar[context.recResult].bool_val==false,actions:assign(context=>{return{bool_val:grammar[context.recResult].bool_val};}),target:\"meeting_time_query\"},{cond:context=>\"bool_val\"in(grammar[context.recResult]||{})&&grammar[context.recResult].bool_val==true,actions:assign(context=>{return{bool_val:grammar[context.recResult].bool_val};}),target:\"confirm_full_day\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Will the meeting take the whole day?\"})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Can you please repeat that\"),on:{ENDSPEECH:\"ask\"}}}},meeting_time_query:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"time\"in(grammar[context.recResult]||{}),actions:assign(context=>{return{time:grammar[context.recResult].time};}),target:\"confirm_day_and_time\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"What time is the meeting?\"})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Can you please repeat that\"),on:{ENDSPEECH:\"ask\"}}}},confirm_day_and_time:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"bool_val\"in(grammar[context.recResult]||{})&&grammar[context.recResult].bool_val==false,actions:assign(context=>{return{bool_val:grammar[context.recResult].bool_val};}),target:\"init\"},{cond:context=>\"bool_val\"in(grammar[context.recResult]||{})&&grammar[context.recResult].bool_val==true,actions:assign(context=>{return{bool_val:grammar[context.recResult].bool_val};}),target:\"finalise\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" at \").concat(context.time,\"?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Can you please repeat that\"),on:{ENDSPEECH:\"ask\"}}}},confirm_full_day:{initial:\"prompt\",on:{RECOGNISED:[{cond:context=>\"bool_val\"in(grammar[context.recResult]||{})&&grammar[context.recResult].bool_val==false,actions:assign(context=>{return{bool_val:grammar[context.recResult].bool_val};}),target:\"init\"},{cond:context=>\"bool_val\"in(grammar[context.recResult]||{})&&grammar[context.recResult].bool_val==true,actions:assign(context=>{return{bool_val:grammar[context.recResult].bool_val};}),target:\"finalise\"},{target:\".nomatch\"}]},states:{prompt:{entry:send(context=>({type:\"SPEAK\",value:\"Do you want to create an appointment with \".concat(context.person,\" on \").concat(context.day,\" for the whole day?\")})),on:{ENDSPEECH:\"ask\"}},ask:{entry:listen()},nomatch:{entry:say(\"Can you please repeat that\"),on:{ENDSPEECH:\"ask\"}}}},finalise:{entry:say(\"Your appointment has been created.\"),on:{ENDSPEECH:\"init\"}},say_error:{target:'init',actions:say(\"Sorry, there was an error. \")}}};","map":{"version":3,"sources":["/Users/jacobcoles/Desktop/LT2216/Lab2/react-xstate-colourchanger/src/dmAppointment.ts"],"names":["send","assign","say","text","_context","type","value","listen","grammar","person","day","time","bool_val","initial_function","proxyurl","rasaurl","nluRequest","myQuery","fetch","Request","method","headers","body","then","data","json","dmMachine","initial","states","init","on","CLICK","welcome","id","RECOGNISED","target","actions","context","query","recResult","prompt","entry","ENDSPEECH","ask","invoke","src","event","onDone","cond","intent","confidence","snippet","name","console","log","onError","select_task","select","always","todo","timer","who","nomatch","whole_day_query","meeting_time_query","confirm_day_and_time","confirm_full_day","finalise","say_error"],"mappings":"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","sourcesContent":["import { MachineConfig, send, Action, assign } from \"xstate\";\n\n\nfunction say(text: string): Action<SDSContext, SDSEvent> {\n    return send((_context: SDSContext) => ({ type: \"SPEAK\", value: text }))\n}\n\nfunction listen(): Action<SDSContext, SDSEvent> {\n    return send('LISTEN')\n}\n\nconst grammar: { [index: string]: { person?: string, day?: string, time?: string, bool_val?: boolean, initial_function: string } } = {\n    \"John\": { person: \"John Appleseed\" },\n    \"Sarah\": { person: \"Sarah Swiggity\" },\n    \"daddy\": { person: \"The big lad\" },\n    \"on monday\": { day: \"Friday\" },\n    \"on tuesday\": { day: \"Thursday\" },\n    \"on wednesday\": { day: \"Friday\" },\n    \"on thursday\": { day: \"Thursday\" },\n    \"on friday\": { day: \"Friday\" },\n    \"on saturday\": { day: \"Thursday\" },\n    \"on sunday\": { day: \"Friday\" },\n    \"at 8\": { time: \"8:00\" },\n    \"at 9\": { time: \"9:00\" },\n    \"at 10\": { time: \"10:00\" },\n    \"at 11\": { time: \"11:00\" },\n    \"at 12\": { time: \"12:00\" },\n    \"at 13\": { time: \"13:00\" },\n    \"at 14\": { time: \"14:00\" },\n    \"at 15\": { time: \"15:00\" },\n    \"at 16\": { time: \"16:00\" },\n    \"yes\": { bool_val: true },\n\t\"yeah\": { bool_val: true },\n\t\"ok\": { bool_val: true },\n\t\"sure\": { bool_val: true },\n\t\"ja\": { bool_val: true },\n    \"no\": { bool_val: false },\n\t\"nope\": { bool_val: false },\n\t\"nein\": { bool_val: false },\n\t\"nej\": { bool_val: false },\n\t\"appointment\": { initial_function: \"appt\" },\n\t\"an appointment\": { initial_function: \"appt\" },\n\t\"set up an appointment\": { initial_function: \"appt\" },\n\t\"make an appointment\": { initial_function: \"appt\" },\n\t\"to do\": { initial_function: \"todo\" },\n\t\"set up a to do\": { initial_function: \"todo\" },\n\t\"make to do\": { initial_function: \"todo\" },\n\t\"make a to do\": { initial_function: \"todo\" },\n\t\"timer\": { initial_function: \"timer\" },\n\t\"make a timer\": { initial_function: \"timer\" },\n\t\"set a timer\": { initial_function: \"timer\" },\n\t\"set timer\": { initial_function: \"timer\" },\n}\n\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst rasaurl = 'https://rasajacobcoles.herokuapp.com/model/parse'\nconst nluRequest = (myQuery: string) =>\n    fetch(new Request(proxyurl + rasaurl, {\n        method: 'POST',\n        headers: { 'Origin': 'http://localhost:3000/' }, // only required with proxy\n        body: `{\"text\": \"${myQuery}\"}`\n    }))\n        .then(data => data.json());\n\n\nexport const dmMachine: MachineConfig<SDSContext, any, SDSEvent> = ({\n    initial: 'init',\n    states: {\n        init: {\n            on: {\n                CLICK: 'welcome'\n            }\n        },\n\t\twelcome:{\n\t\t\tinitial: \"prompt\",\n\t\t\tid: \"welcome\",\n\t\t\ton: {\n\t\t\t\tRECOGNISED: {\n\t\t\t\t\ttarget: \"query\",\n\t\t\t\t\tactions: assign((context) => { return { query: context.recResult } })\n\t\t\t\t}\n\t\t\t},\n\t\t\tstates: {\n                prompt: { \n\t\t\t\t\tentry: say(\"Would you like to book an appointment, set a timer or add a to do item?\"),\n\t\t\t\t\ton: { ENDSPEECH: \"ask\"} \n\t\t\t\t},\n\t\t\t\task: {\n\t\t\t\t\tentry: listen()\n\t\t\t\t},\n            }\n\t\t},\n\t\tquery: {\n\t\t\tinvoke: {\n\t\t\t\tid: \"rasaquery\",\n\t\t\t\tsrc: (context, event) => nluRequest(context.query),\n\t\t\t\tonDone: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttarget: \".prompt\",\n\t\t\t\t\t\tcond: (context, event)=> { return ((event.data.intent.confidence) < 0.7) }\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttarget: \"select_task\",\n\t                    actions: [\n\t\t\t\t\t\t\tassign((context, event) => { return {snippet: event.data.intent.name }}),\n\t\t\t\t\t\t\t(context:SDSContext, event:any) => console.log(event.data),\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n                ],\n\t\t\t\tonError: {\n\t\t\t\t\ttarget: 'init',\n\t\t\t\t\tactions: [\n\t\t\t\t\t\t(context,event) => console.log(event.data),\n\t\t\t\t\t\tsay(\"Sorry, there was an error. \")\n\t\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\tstates: {\n                prompt: { \n\t\t\t\t\tentry: say(\"Sorry, I didn't get that\"),\n\t\t\t\t\ton: { ENDSPEECH: \"#welcome\"} \n\t\t\t\t},\n            }\n\t\t},\n\t\tselect_task: {\n\t\t\tinitial: \"select\",\n\t\t\tstates: {\n\t\t\t\tselect: {\n\t\t\t\t\talways: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcond: (context) => context.snippet ===  \"Appointment\",\n\t\t\t\t\t\t\ttarget: \"#who\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcond: (context) => context.snippet  ===  \"TODO\",\n\t\t\t\t\t\t\ttarget: \"#todo\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcond: (context) => context.snippet  ===  \"Timer\",\n\t\t\t\t\t\t\ttarget: \"#timer\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttarget: \"prompt\"\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\tprompt: { \n\t\t\t\t\tentry: say(\"Sorry, that isn't a valid answer\"),\n\t\t\t\t\ton: { ENDSPEECH: \"#welcome\"} \n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\ttodo: {\n            id: \"todo\",\n\t\t\tinitial: \"prompt\",\n\t\t\ton: {\n\t\t\t\tENDSPEECH: \"init\"\n\t\t\t},\n\t\t\tstates: {\n\t\t\t\tprompt: {\n\t\t\t\t\tentry: say(\"You are in the to do thing.\"),\n\t\t\t\t},\n\t\t\t}\n\t\t},\n\t\ttimer: {\n            id: \"timer\",\n\t\t\tinitial: \"prompt\",\n\t\t\ton: {\n\t\t\t\tENDSPEECH: \"init\"\n\t\t\t},\n\t\t\tstates: {\n\t\t\t\tprompt: {\n\t\t\t\t\tentry: say(\"You are in the timer thing.\")\n\t\t\t\t},\n\t\t\t}\n\t\t},\n        who: {\n            id: \"who\",\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"person\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { person: grammar[context.recResult].person }}),\n                    target: \"day\"\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: say(\"Who are you meeting with?\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Sorry I don't know them\"),\n                    on: { ENDSPEECH: \"prompt\" }\n                }\n            }\n        },\n        day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"day\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { day: grammar[context.recResult].day } }),\n                    target: \"whole_day_query\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `OK. ${context.person}. On which day is your meeting?`\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Can you please repeat that\"),\n                    on: { ENDSPEECH: \"ask\" }\n                }\n            }\n        },\n        whole_day_query: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [\n\t\t\t\t{\n\t\t\t\t\tcond: (context) => \"bool_val\" in (grammar[context.recResult] || {}) && (grammar[context.recResult].bool_val == false),\n                    actions: assign((context) => { return { bool_val: grammar[context.recResult].bool_val } }),\n                    target: \"meeting_time_query\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcond: (context) => \"bool_val\" in (grammar[context.recResult] || {}) && (grammar[context.recResult].bool_val == true),\n                    actions: assign((context) => { return { bool_val: grammar[context.recResult].bool_val } }),\n                    target: \"confirm_full_day\"\n\t\t\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Will the meeting take the whole day?`\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Can you please repeat that\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n            }\n        },\n        meeting_time_query: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [{\n                    cond: (context) => \"time\" in (grammar[context.recResult] || {}),\n                    actions: assign((context) => { return { time: grammar[context.recResult].time } }),\n                    target: \"confirm_day_and_time\"\n\n                },\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `What time is the meeting?`\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Can you please repeat that\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n            }\n        },\n\t\tconfirm_day_and_time: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [\n\t\t\t\t{\n\t\t\t\t\tcond: (context) => \"bool_val\" in (grammar[context.recResult] || {}) && (grammar[context.recResult].bool_val == false),\n                    actions: assign((context) => { return { bool_val: grammar[context.recResult].bool_val } }),\n                    target: \"init\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcond: (context) => \"bool_val\" in (grammar[context.recResult] || {}) && (grammar[context.recResult].bool_val == true),\n                    actions: assign((context) => { return { bool_val: grammar[context.recResult].bool_val } }),\n                    target: \"finalise\"\n\t\t\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} at ${context.time}?`\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Can you please repeat that\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n            }\n        },\n\t\tconfirm_full_day: {\n            initial: \"prompt\",\n            on: {\n                RECOGNISED: [\n\t\t\t\t{\n\t\t\t\t\tcond: (context) => \"bool_val\" in (grammar[context.recResult] || {}) && (grammar[context.recResult].bool_val == false),\n                    actions: assign((context) => { return { bool_val: grammar[context.recResult].bool_val } }),\n                    target: \"init\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcond: (context) => \"bool_val\" in (grammar[context.recResult] || {}) && (grammar[context.recResult].bool_val == true),\n                    actions: assign((context) => { return { bool_val: grammar[context.recResult].bool_val } }),\n                    target: \"finalise\"\n\t\t\t\t},\n                { target: \".nomatch\" }]\n            },\n            states: {\n                prompt: {\n                    entry: send((context) => ({\n                        type: \"SPEAK\",\n                        value: `Do you want to create an appointment with ${context.person} on ${context.day} for the whole day?`\n                    })),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n                ask: {\n                    entry: listen()\n                },\n                nomatch: {\n                    entry: say(\"Can you please repeat that\"),\n                    on: { ENDSPEECH: \"ask\" }\n                },\n            }\n        },\n\t\tfinalise: {\n\t\t\tentry: say(\"Your appointment has been created.\"),\n\t\t\ton: { ENDSPEECH: \"init\" }\n\t\t},\n\t\tsay_error: {\n\t\t\ttarget: 'init',\n\t\t\tactions: say(\"Sorry, there was an error. \")\n\t\t}\n\n    }\n})\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}